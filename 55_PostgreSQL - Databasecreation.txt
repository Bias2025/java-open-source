PROMPT_TEMPLATE:
  name: "PostgreSQL Schema Architect - Production Grade"
  version: "3.0.0"
  compatibility: "PostgreSQL 14+, AWS RDS, Spring Boot 3.x"
  -- ============================================
--  PostgreSQL Schema Generation
-- CRAFT-TPO Analysis Required
-- ============================================

You are  elite database architecture team with 800+ years of PostgreSQL expertise. Generate a COMPLETE, PRODUCTION-READY PostgreSQL schema following CRAFT-TPO methodology.

## C - CONTEXT (Environmental Understanding)
```yaml
CONTEXT:
  domain: [BUSINESS_DOMAIN]  # e.g., "E-commerce marketplace", "Healthcare patient management"
  scale_metrics:
    - expected_users: [NUMBER]  # e.g., "1M active users"
    - peak_rps: [NUMBER]  # e.g., "50K requests/second"
    - data_volume: [SIZE]  # e.g., "100TB within 2 years"
    - growth_rate: [PERCENTAGE]  # e.g., "30% monthly"
  deployment:
    platform: "AWS RDS PostgreSQL"
    instance_class: [SPECIFY]  # e.g., "db.r6g.4xlarge"
    multi_az: [true/false]
    read_replicas: [NUMBER]
  compliance:
    - standards: [LIST]  # e.g., "GDPR, HIPAA, PCI-DSS"
    - data_residency: [REGION]
    - encryption_requirements: [SPECIFY]
    REQUIREMENTS:
  entities:
    primary:
      - name: [ENTITY_1]
        estimated_rows: [NUMBER]
        access_pattern: [READ_HEAVY/WRITE_HEAVY/BALANCED]
      - name: [ENTITY_2]
        estimated_rows: [NUMBER]
        access_pattern: [PATTERN]
    relationships:
      - type: [ONE_TO_MANY/MANY_TO_MANY]
        parent: [ENTITY]
        child: [ENTITY]
        cascade_behavior: [CASCADE/RESTRICT/SET_NULL]
  performance:
    query_latency_p99: [TIME]  # e.g., "<100ms"
    write_throughput: [TPS]  # e.g., "10K transactions/sec"
    concurrent_connections: [NUMBER]  # e.g., "5000"
  data_integrity:
    - unique_constraints: [LIST_FIELDS]
    - check_constraints: [LIST_RULES]
    - referential_integrity: [STRICT/RELAXED]
    ARCHITECTURE:
  partitioning_strategy:
    type: [RANGE/LIST/HASH]  # if applicable
    partition_key: [COLUMN]
    retention_policy: [DURATION]
  indexing_strategy:
    - btree_indexes: [LIST]  # Default for most queries
    - gin_indexes: [LIST]  # For JSONB/full-text search
    - brin_indexes: [LIST]  # For time-series data
    - partial_indexes: [LIST]  # For filtered queries
  audit_strategy:
    approach: [TRIGGER_BASED/CDC/APPLICATION_LEVEL]
    retention: [DURATION]
  backup_strategy:
    frequency: [SCHEDULE]
    retention: [DURATION]
    FRAMEWORK:
  postgresql_version: "14.x"  # AWS RDS supported
  extensions_required:
    - "uuid-ossp"  # For UUID generation
    - "pg_stat_statements"  # For query analysis
    - "pgcrypto"  # For encryption
    - "pg_trgm"  # For fuzzy text search
  spring_integration:
    jpa_version: "3.x"
    hibernate_version: "6.x"
    connection_pool: "HikariCP"
    migration_tool: "Flyway"
    TECHNOLOGY:
  optimization_techniques:
    - connection_pooling: "PgBouncer configuration"
    - query_optimization: "EXPLAIN ANALYZE patterns"
    - vacuum_strategy: "Custom autovacuum settings"
    - statistics_target: "Increased for large tables"
  monitoring:
    - metrics: "pg_stat_* views"
    - slow_query_log: "Enabled with threshold"
    - performance_insights: "AWS RDS Performance Insights"
    PERSONA:
  team_size: [NUMBER]
  expertise_level: [JUNIOR/MID/SENIOR]
  existing_stack: [LIST_TECHNOLOGIES]
  migration_from: [LEGACY_SYSTEM]  # if applicable
  ORIGINALITY:
  special_features:
    - [UNIQUE_REQUIREMENT_1]  # e.g., "Multi-tenant isolation"
    - [UNIQUE_REQUIREMENT_2]  # e.g., "Temporal data versioning"
  innovation_areas:
    - [AREA_1]  # e.g., "AI-driven query optimization"
